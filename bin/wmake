#!/usr/bin/env python
# -*- coding: utf-8 -*-

# whatever-make
# -------------
# Starts from pwd() to / and tries to find, by order of descending priority:

# - A directory with a CMakeLists.txt and a child directory “build”
#   If found, cd build && make.
# - A directory with a Makefile.
#   If found, cd && make.
#
# TODO: May some day handle scons, setup.py, cabal...

import multiprocessing, os, sys
from os.path import join as path_join, exists as path_exists, isdir, isfile

path = os.getcwd() if len(sys.argv)==1 else sys.argv[1]
remainder = 1
while remainder:
    print(path)
    # Looking for CMake out of source
    if isfile(path_join(path, "CMakeLists.txt")) and isdir(path_join(path, "build")):
        print("Out of source cmake build found at {0}".format(path))
        os.execlp("make", "make", "-C", path_join(path, "build"), "-j{0}".format(multiprocessing.cpu_count()))

    # Looking for makefile
    if isfile(path_join(path, "Makefile")):
        print("Makefile found.") 
        os.execlp("make", "make", "-C", path_join(path, "build"), "-j{0}".format(multiprocessing.cpu_count()))
    
    path, remainder = os.path.split(path)

print("Nothing found !")
exit(-1)

