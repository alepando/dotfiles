#!/bin/sh

if [ "$(id -u)" != "0" ]; then
   echo "This script must be run as root" 1>&2
   exit 1
fi

echo "I assume you have:"
echo
echo " - Updated /etc/apt/sources.list"
echo
echo "If that's OK, then just tell who I do work for?"

read target_user
id -u "$target_user" > /dev/null # We need quotes, or an empty value
                                 # will be accepted as meaning current
                                 # user

if [ $? = "1" ]; then
   echo "$target_user doesn't exist." 1>&2
   exit 1
else
    target_home=$(eval echo ~$target_user)
fi

echo "Working for $target_user, whose home is $target_home."

# Disable auto install of suggested/recommended packages, and allow their autoremoval
echo 'APT::Install-Recommends "false";'              > /etc/apt/apt.conf.d/99_norecommends
echo 'APT::AutoRemove::RecommendsImportant "false";' >> /etc/apt/apt.conf.d/99_norecommends
echo 'APT::AutoRemove::SuggestsImportant "false";'   >> /etc/apt/apt.conf.d/99_norecommends

# Update, upgrade
apt -y autoremove
apt update
apt -y dist-upgrade

# List installed packages
pkglistfile=/usr/local/share/base-packages.list
if [ ! -f $pkglistfile ]; then
    apt-mark showmanual > $pkglistfile
fi

# Install required tooling
apt install ca-certificates git

# Clone dotfiles
git clone https://github.com/thblt/dotfiles $target_home/.dotfiles
# Symlink them (as the target user)
sudo -u $target_user $target_home/.dotfiles/postinstall/symlink-dotfiles
# Install all the things
$target_home/.dotfiles/postinstall/debian-install-packages

# Give back ownership
chown -R $target_user $target_home
chgrp -R $target_user $target_home

# Fix groups for target user
usermod -aG sudo,adm,systemd-journal $target_user

# Enable ZSH
chsh -s /usr/bin/zsh $target_user
